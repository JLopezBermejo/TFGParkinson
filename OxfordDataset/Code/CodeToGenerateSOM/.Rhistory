#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
set.seed(23)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
set.seed(100)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
set.seed(1000)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
set.seed(1000)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
set.seed(23)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
blue.fade <- function(n){
return(rgb(0,0.4,1,alpha=seq(0,1,1/n)))}
rm(list = ls())
blue.fade <- function(n){
return(rgb(0,0.4,1,alpha=seq(0,1,1/n)))}
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
set.seed(23)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = blue.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
rm(list = ls())
#cargamos los packetes
library(kohonen)
library(dplyr)
library(aweSOM)
#primeramente ir al directorio con los datos
directory <- paste(dirname(getwd()),'/GenerateGroups',sep='')
directory <- paste(directory,'/G01/G01_SC_22_10x10.csv',sep='')
#dependiendo de que grupo queramos utilizar cambiamos el comando anterior al grupo elegido
df <- read.csv(directory)
status <- df$status
name <- df$name
df <- select(df,-name)
df <- select(df,-status)
#se utiliza scale() para poder dimensionar bien el dataset y poder entrenar
dfScaled <- scale(df,center=T,scale=T)
#inicializamos la red con la que entrenaremos
redInit <- somInit(dfScaled,10,10,"random")
#ahora entrenamos la red
G01SOM <- som(dfScaled, grid = somgrid(10,10,"hexagonal"), rlen = 1000,init = redInit)
#representamos la red
purple.fade <- function(n){
return(rgb(0,0,0.2,alpha=seq(0,1,1/n)))}
plot(G01SOM, type="count", shape = "straight", palette.name = purple.fade)
plot(G01SOM, type="dist.neighbours", shape = "straight")
#Vemos que clusters ha creado la red
distancesSOM <- dist(getCodes(G01SOM,1))
cluster <- hclust(distancesSOM)
plot(cluster,hang=-1,labels=F)
#ahora probamos que secciones crea para 2, 3 y 4 clusters
cluster2 <- cutree(cluster, k=2)
cluster3 <- cutree(cluster, k=3)
cluster4 <- cutree(cluster, k=4)
#representamos cada uno de ellos para estudiar si existen diferencias a la hora de hacer grupos
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1")[cluster2], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen")[cluster3], shape = "straight")
plot(G01SOM,type="mapping",bgcol=c("steelblue1","sienna1","yellowgreen","red")[cluster4], shape = "straight")
